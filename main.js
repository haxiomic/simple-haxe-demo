// Generated by Haxe 4.2.0-rc.1
(function ($global) { "use strict";
var Ball = function(pos) {
	this.rgb = new _$VectorMath_Vec3Data(0,0,0);
	this.vel = new _$VectorMath_Vec2Data(0,0);
	this.pos = new _$VectorMath_Vec2Data(0,0);
	this.pos = new _$VectorMath_Vec2Data(pos.x,pos.y);
};
var _$VectorMath_Vec2Data = function(x,y) {
	this.x = x;
	this.y = y;
};
function Main_main() {
	window.document.body.appendChild(Main_canvas);
	Main_canvas.width = 800;
	Main_canvas.height = 600;
	window.requestAnimationFrame(Main_frameLoop);
	Main_canvas.addEventListener("mousemove",function(e) {
		Main_mouseActive = true;
		Main_mousePos.x = e.clientX;
		return Main_mousePos.y = e.clientY;
	});
	Main_canvas.addEventListener("mouseleave",function(e) {
		return Main_mouseActive = false;
	});
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var _g1 = 0;
		while(_g1 < 20) {
			var uv_x = i / 19;
			var uv_y = _g1++ / 19;
			var ball = new Ball(new _$VectorMath_Vec2Data(uv_x * Main_canvas.width,uv_y * Main_canvas.height));
			ball.rgb = new _$VectorMath_Vec3Data(uv_x,uv_y,1.);
			Main_balls.push(ball);
			console.log("Main.hx:48:",ball);
		}
	}
}
function Main_frameLoop(t_ms) {
	Main_ctx2d.clearRect(0,0,Main_canvas.width,Main_canvas.height);
	var _g = 0;
	var _g1 = Main_balls.length;
	while(_g < _g1) {
		var i = _g++;
		var ball = Main_balls[i];
		var a = ball.vel;
		var lhs = -Main_airDampening;
		var rhs = ball.vel;
		a.x += rhs.x * lhs * 0.0166666666666666664;
		a.y += rhs.y * lhs * 0.0166666666666666664;
		ball.vel.y += Main_gravity * 0.0166666666666666664;
		if(Main_mouseActive) {
			var a1 = Main_mousePos;
			var b = ball.pos;
			var x = a1.x - b.x;
			var y = a1.y - b.y;
			var distance = Math.sqrt(x * x + y * y);
			var f = -Main_mouseAttraction / (distance * distance + 50);
			var a2 = ball.vel;
			a2.x += x / distance * f * 0.0166666666666666664;
			a2.y += y / distance * f * 0.0166666666666666664;
		}
		var _g2 = i + 1;
		var _g3 = Main_balls.length;
		while(_g2 < _g3) {
			var ball2 = Main_balls[_g2++];
			var a3 = ball2.pos;
			var b1 = ball.pos;
			var x1 = a3.x - b1.x;
			var y1 = a3.y - b1.y;
			var distance1 = Math.sqrt(x1 * x1 + y1 * y1);
			var x2 = x1 / distance1;
			var y2 = y1 / distance1;
			var f1 = 0.0;
			f1 = -1000000.0 / (Math.pow(distance1,4) + 100);
			f1 += 2000.0 / (distance1 * distance1 + 100);
			var a4 = ball.vel;
			var lhs1 = f1;
			a4.x += x2 * lhs1 * 0.0166666666666666664;
			a4.y += y2 * lhs1 * 0.0166666666666666664;
			var a5 = ball2.vel;
			var lhs2 = f1;
			a5.x -= x2 * lhs2 * 0.0166666666666666664;
			a5.y -= y2 * lhs2 * 0.0166666666666666664;
		}
		var a6 = ball.pos;
		var a7 = ball.vel;
		a6.x += a7.x * 0.0166666666666666664;
		a6.y += a7.y * 0.0166666666666666664;
		var x3 = Main_canvas.width;
		var y3 = Main_canvas.height;
		var x4 = -Main_wallDampening;
		var y4 = Main_wallFriction;
		var a8 = ball.pos;
		var x5 = a8.x - x3;
		var y5 = a8.y - y3;
		if(x5 > 0) {
			ball.pos.x = x3 - x5;
			var a9 = ball.vel;
			a9.x *= x4;
			a9.y *= y4;
		}
		if(y5 > 0) {
			ball.pos.y = y3 - y5;
			var a10 = ball.vel;
			a10.x *= y4;
			a10.y *= x4;
		}
		if(ball.pos.x < 0) {
			ball.pos.x = -ball.pos.x;
			var a11 = ball.vel;
			a11.x *= x4;
			a11.y *= y4;
		}
		if(ball.pos.y < 0) {
			ball.pos.y = -ball.pos.y;
			var a12 = ball.vel;
			a12.x *= y4;
			a12.y *= x4;
		}
		Main_ctx2d.beginPath();
		Main_ctx2d.arc(ball.pos.x,ball.pos.y,5,0,2 * Math.PI);
		Main_ctx2d.fillStyle = "rgba(" + ball.rgb.x * 255 + ", " + ball.rgb.y * 255 + ", " + ball.rgb.z * 255 + ", 1.0)";
		Main_ctx2d.fill();
	}
	window.requestAnimationFrame(Main_frameLoop);
}
var _$VectorMath_Vec3Data = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var Main_canvas = window.document.createElement("canvas");
var Main_ctx2d = Main_canvas.getContext("2d",null);
var Main_gravity = 0;
var Main_wallDampening = 0.9;
var Main_wallFriction = 0.9;
var Main_mouseAttraction = 300000;
var Main_airDampening = 0.2;
var Main_mouseActive = false;
var Main_mousePos = new _$VectorMath_Vec2Data(0,0);
var Main_balls = [];
Main_main();
})({});
